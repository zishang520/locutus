// warning: This file is auto generated by `yarn build:tests`
// Do not edit by hand!

'use strict'

process.env.TZ = 'UTC'
var expect = require('chai').expect
var ini_set = require('../../../../src/php/info/ini_set') // eslint-disable-line no-unused-vars,camelcase
var ini_get = require('../../../../src/php/info/ini_get') // eslint-disable-line no-unused-vars,camelcase
var preg_replace = require('../../../../src/php/pcre/preg_replace.js') // eslint-disable-line no-unused-vars,camelcase

describe('src/php/pcre/preg_replace.js (tested in test/generated/php/pcre/test-preg_replace.js)', function () {
  it('should pass example 1', function (done) {
    var expected = "It was the night before Christmas."
    var result = preg_replace('/xmas/i', 'Christmas', 'It was the night before Xmas.')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 2', function (done) {
    var expected = "Christmas: It was the night before Christmas."
    var result = preg_replace('/xmas/ig', 'Christmas', 'xMas: It was the night before Xmas.')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 3', function (done) {
    var expected = "April1,2003"
    var result = preg_replace('\/(\\w+) (\\d+), (\\d+)\/i', '$11,$3', 'April 15, 2003')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 4', function (done) {
    var expected = "TheDevelopmentofcodehttpwww"
    var result = preg_replace('/[^a-zA-Z0-9]+/', '', 'The Development of code . http://www.')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 5', function (done) {
    var expected = "Dusseldorfer Hauptstrasse"
    var result = preg_replace('/[^A-Za-z0-9_\\s]/', '', 'D"usseldorfer H"auptstrasse')
    expect(result).to.deep.equal(expected)
    done()
  })
})
